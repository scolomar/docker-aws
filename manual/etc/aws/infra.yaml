#########################################################################
#      Copyright (C) 2020        Sebastian Francisco Colomar Bauza      #
#      SPDX-License-Identifier:  GPL-2.0-only                           #
#########################################################################

---

AWSTemplateFormatVersion: "2010-09-09"

Description: This template creates a new VPC and deploys a production-grade HA cluster in AWS

#============================================================
# UI Definition
#============================================================
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: Network Configuration
        Parameters:
          - SubnetCidrBlockPrivate1
          - SubnetCidrBlockPrivate2
          - SubnetCidrBlockPrivate3
          - SubnetCidrBlockPublic1
          - SubnetCidrBlockPublic2
          - SubnetCidrBlockPublic3
          - VPCCidrBlock
          
    ParameterLabels:
      SubnetCidrBlockPrivate1:
        default: Private Subnet 1 CIDR
      SubnetCidrBlockPrivate2:
        default: Private Subnet 2 CIDR
      SubnetCidrBlockPrivate3:
        default: Private Subnet 3 CIDR
      SubnetCidrBlockPublic1:
        default: Public Subnet 1 CIDR
      SubnetCidrBlockPublic2:
        default: Public Subnet 2 CIDR
      SubnetCidrBlockPublic3:
        default: Public Subnet 3 CIDR
      VPCCidrBlock:
        default: VPC CIDR
                
Parameters:

  SubnetCidrBlockPrivate1:
    Default: 10.168.1.0/24
    Description: >
      CIDR block for private subnet located in Availability Zone 1. 
      All resources located on this subnet are provided an IP within this address block. 
    Type: String
    
  SubnetCidrBlockPrivate2:
    Default: 10.168.3.0/24
    Description: >
      CIDR block for private subnet located in Availability Zone 2. 
      All resources located on this subnet are provided an IP within this address block. 
    Type: String
    
  SubnetCidrBlockPrivate3:
    Default: 10.168.5.0/24
    Description: >
      CIDR block for private subnet located in Availability Zone 3. 
      All resources located on this subnet are provided an IP within this address block. 
    Type: String
    
  SubnetCidrBlockPublic1:
    Default: 10.168.2.0/24
    Description: >
      CIDR block for public (DMZ) subnet located in Availability Zone 1. 
      All resources located on this subnet are provided an IP within this address block. 
    Type: String
    
  SubnetCidrBlockPublic2:
    Default: 10.168.4.0/24
    Description: >
      CIDR block for public (DMZ) subnet located in Availability Zone 2. 
      All resources located on this subnet are provided an IP within this address block. 
    Type: String
    
  SubnetCidrBlockPublic3:
    Default: 10.168.6.0/24
    Description: >
      CIDR block for public (DMZ) subnet located in Availability Zone 3. 
      All resources located on this subnet are provided an IP within this address block. 
    Type: String
    
  VPCCidrBlock:
    Default: 10.168.0.0/16
    Description: >
      CIDR block for the VPC. All the subnets and resources will have an IP within this address block.
    Type: String
    
#============================================================
# Resources
#============================================================
Resources:

  EIP1:
    Properties:
      Domain: vpc
    Type: AWS::EC2::EIP

  EIP2:
    Properties:
      Domain: vpc
    Type: AWS::EC2::EIP

  EIP3:
    Properties:
      Domain: vpc
    Type: AWS::EC2::EIP

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  NatGateway1:
    DependsOn: VPCGatewayAttachment
    Properties:
      AllocationId: !GetAtt EIP1.AllocationId
      SubnetId: !Ref SubnetPublic1
    Type: AWS::EC2::NatGateway

  NatGateway2:
    DependsOn: VPCGatewayAttachment
    Properties:
      AllocationId: !GetAtt EIP2.AllocationId
      SubnetId: !Ref SubnetPublic2
    Type: AWS::EC2::NatGateway

  NatGateway3:
    DependsOn: VPCGatewayAttachment
    Properties:
      AllocationId: !GetAtt EIP3.AllocationId
      SubnetId: !Ref SubnetPublic3
    Type: AWS::EC2::NatGateway

  RoutePrivate1:
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway1
      RouteTableId: !Ref RouteTablePrivate1
    Type: AWS::EC2::Route

  RoutePrivate2:
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway2
      RouteTableId: !Ref RouteTablePrivate2
    Type: AWS::EC2::Route

  RoutePrivate3:
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway3
      RouteTableId: !Ref RouteTablePrivate3
    Type: AWS::EC2::Route

  RoutePublic:
    DependsOn: [VPCGatewayAttachment]
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref RouteTablePublic
    Type: AWS::EC2::Route

  RouteTablePrivate1:
    Properties:
      VpcId: !Ref VPC
    Type: AWS::EC2::RouteTable

  RouteTablePrivate2:
    Properties:
      VpcId: !Ref VPC
    Type: AWS::EC2::RouteTable

  RouteTablePrivate3:
    Properties:
      VpcId: !Ref VPC
    Type: AWS::EC2::RouteTable

  RouteTablePublic:
    Properties:
      VpcId: !Ref VPC
    Type: AWS::EC2::RouteTable

  SubnetPrivate1:
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: !Ref 'AWS::Region'
      CidrBlock: !Ref SubnetCidrBlockPrivate1
      VpcId: !Ref VPC
    Type: AWS::EC2::Subnet

  SubnetPrivate2:
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: !Ref 'AWS::Region'
      CidrBlock: !Ref SubnetCidrBlockPrivate2
      VpcId: !Ref VPC
    Type: AWS::EC2::Subnet

  SubnetPrivate3:
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 2
          - Fn::GetAZs: !Ref 'AWS::Region'
      CidrBlock: !Ref SubnetCidrBlockPrivate3
      VpcId: !Ref VPC
    Type: AWS::EC2::Subnet

  SubnetPublic1:
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: !Ref 'AWS::Region'
      CidrBlock: !Ref SubnetCidrBlockPublic1
      VpcId: !Ref VPC
    Type: AWS::EC2::Subnet

  SubnetPublic2:
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: !Ref 'AWS::Region'
      CidrBlock: !Ref SubnetCidrBlockPublic2
      VpcId: !Ref VPC
    Type: AWS::EC2::Subnet

  SubnetPublic3:
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 2
          - Fn::GetAZs: !Ref 'AWS::Region'
      CidrBlock: !Ref SubnetCidrBlockPublic3
      VpcId: !Ref VPC
    Type: AWS::EC2::Subnet

  SubnetRouteTableAssociationPrivate1:
    Properties:
      RouteTableId: !Ref RouteTablePrivate1
      SubnetId: !Ref SubnetPrivate1
    Type: AWS::EC2::SubnetRouteTableAssociation

  SubnetRouteTableAssociationPrivate2:
    Properties:
      RouteTableId: !Ref RouteTablePrivate2
      SubnetId: !Ref SubnetPrivate2
    Type: AWS::EC2::SubnetRouteTableAssociation

  SubnetRouteTableAssociationPrivate3:
    Properties:
      RouteTableId: !Ref RouteTablePrivate3
      SubnetId: !Ref SubnetPrivate3
    Type: AWS::EC2::SubnetRouteTableAssociation

  SubnetRouteTableAssociationPublic1:
    Properties:
      RouteTableId: !Ref RouteTablePublic
      SubnetId: !Ref SubnetPublic1
    Type: AWS::EC2::SubnetRouteTableAssociation

  SubnetRouteTableAssociationPublic2:
    Properties:
      RouteTableId: !Ref RouteTablePublic
      SubnetId: !Ref SubnetPublic2
    Type: AWS::EC2::SubnetRouteTableAssociation

  SubnetRouteTableAssociationPublic3:
    Properties:
      RouteTableId: !Ref RouteTablePublic
      SubnetId: !Ref SubnetPublic3
    Type: AWS::EC2::SubnetRouteTableAssociation

  VPC:
    Properties:
      CidrBlock: !Ref VPCCidrBlock
    Type: "AWS::EC2::VPC"

  VPCGatewayAttachment:
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC
    Type: AWS::EC2::VPCGatewayAttachment
    
